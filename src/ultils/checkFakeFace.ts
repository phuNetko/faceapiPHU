import * as faceapi from "@vladmandic/face-api";

export const checkLiveness = async (videoElement: HTMLVideoElement) => {
  // L·∫•y l·∫ßn qu√©t ƒë·∫ßu ti√™n
  const firstDetection = await faceapi
    .detectSingleFace(videoElement)
    .withFaceLandmarks()
    .withFaceDescriptor();

  if (!firstDetection) {
    alert("‚ùå Kh√¥ng ph√°t hi·ªán khu√¥n m·∫∑t!");
    return false;
  }

  console.log("üïí ƒê·ª£i 2 gi√¢y ƒë·ªÉ ki·ªÉm tra liveness...");
  await new Promise((resolve) => setTimeout(resolve, 2000)); // ƒê·ª£i 2 gi√¢y

  // L·∫•y l·∫ßn qu√©t th·ª© hai sau 2 gi√¢y
  const secondDetection = await faceapi
    .detectSingleFace(videoElement)
    .withFaceLandmarks()
    .withFaceDescriptor();

  if (!secondDetection) {
    alert("‚ùå Kh√¥ng ph√°t hi·ªán khu√¥n m·∫∑t l·∫ßn hai!");
    return false;
  }

  // T√≠nh kho·∫£ng c√°ch gi·ªØa hai l·∫ßn qu√©t
  const distance = faceapi.euclideanDistance(
    firstDetection.descriptor,
    secondDetection.descriptor
  );

  console.log(`üìè Kho·∫£ng c√°ch gi·ªØa hai l·∫ßn qu√©t: ${distance}`);

  if (distance < 0.2) {
    alert("‚ùå Ph√°t hi·ªán ·∫£nh tƒ©nh! Vui l√≤ng s·ª≠ d·ª•ng khu√¥n m·∫∑t th·∫≠t.");
    return false;
  }

  console.log("‚úÖ Liveness check passed!");
  return true;
};
